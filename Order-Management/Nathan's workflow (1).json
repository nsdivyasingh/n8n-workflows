{
  "name": "Nathan's workflow",
  "nodes": [
    {
      "parameters": {
        "url": "https://<REDACTED_WEBHOOK_URL>",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "unique_id",
              "value": "<REDACTED_UNIQUE_ID>"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [208, 0],
      "id": "459e8988-dfda-4de7-83fc-1aee31f073f5",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "<REDACTED>",
          "name": "<REDACTED_CREDENTIAL_NAME>"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "<REDACTED_AIRTABLE_BASE_ID>",
          "mode": "list",
          "cachedResultName": "beginner course.",
          "cachedResultUrl": "<REDACTED_AIRTABLE_URL>"
        },
        "table": {
          "__rl": true,
          "value": "<REDACTED_AIRTABLE_TABLE_ID>",
          "mode": "list",
          "cachedResultName": "processingOrders",
          "cachedResultUrl": "<REDACTED_AIRTABLE_TABLE_URL>"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "orderID",
              "displayName": "orderID",
              "type": "number"
            },
            {
              "id": "employeeName",
              "displayName": "employeeName",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [944, -112],
      "id": "a2ee0b19-297b-4863-961d-e7c78bffdec7",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "<REDACTED>",
          "name": "<REDACTED_CREDENTIAL_NAME>"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "leftValue": "={{ $json.orderStatus }}",
              "rightValue": "processing",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{ $json.employeeName }}",
              "rightValue": "Mario",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [416, 0],
      "id": "203f6d88-de96-4630-acc2-43a2f5a2e5dd",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "orderID",
              "value": "={{ $json.orderID }}",
              "type": "number"
            },
            {
              "name": "employeeName",
              "value": "={{ $json.employeeName }}",
              "type": "string"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [736, -112],
      "id": "d0395265-4452-461c-a1d9-2970b06c5c44",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "let items = $input.all();\nlet totalBooked = items.length;\nlet bookedSum = 0;\n\nfor (let i=0; i < items.length; i++) {\n  bookedSum = bookedSum + items[i].json.orderPrice;\n}\n\nreturn [{ json: {totalBooked, bookedSum} }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [736, 128],
      "id": "9ae5184e-4053-41b2-8763-170b858ac75d",
      "name": "Code"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=This week we've {{$json[\"totalBooked\"]}} booked orders with a total value of {{$json[\"bookedSum\"]}}. My Unique ID: <REDACTED_UNIQUE_ID>",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [944, 128],
      "id": "3f230eee-c1ce-4db6-9119-501895205544",
      "name": "Discord",
      "webhookId": "<REDACTED_DISCORD_WEBHOOK_ID>",
      "credentials": {
        "discordWebhookApi": {
          "id": "<REDACTED>",
          "name": "<REDACTED_CREDENTIAL_NAME>"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [1],
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [0, 0],
      "id": "9ee4e716-df67-436e-8bce-910f8f47d465",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "let items = $input.all();\nlet totalBooked = items.length;\nlet bookedSum = 0;\n\nfor (let i=0; i < items.length; i++) {\n  bookedSum = bookedSum + items[i].json.orderPrice;\n}\n\nreturn [{ json: {totalBooked, bookedSum} }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [752, -304],
      "id": "2df0bd8b-1f9e-46af-b245-e244dc81c4e3",
      "name": "Code1"
    }
  ],
  "connections": {
    "HTTP Request": {
      "main": [
        [{ "node": "If", "type": "main", "index": 0 }]
      ]
    },
    "If": {
      "main": [
        [
          { "node": "Edit Fields", "type": "main", "index": 0 },
          { "node": "Code1", "type": "main", "index": 0 }
        ],
        [{ "node": "Code", "type": "main", "index": 0 }]
      ]
    },
    "Edit Fields": {
      "main": [
        [{ "node": "Create a record", "type": "main", "index": 0 }]
      ]
    },
    "Code": {
      "main": [
        [{ "node": "Discord", "type": "main", "index": 0 }]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [{ "node": "HTTP Request", "type": "main", "index": 0 }]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "<REDACTED>",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "<REDACTED>"
  },
  "id": "bTIzUnHFPfVHIpNB",
  "tags": []
}
